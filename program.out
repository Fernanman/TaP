; ModuleID = 'TaP'
source_filename = "TaP"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@str = private unnamed_addr constant [6 x i8] c"hello\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @strlen(i8*)

define i32 @main() {
entry:
  %i = alloca i32, align 4
  store i32 2, i32* %i, align 4
  br label %while

while:                                            ; preds = %while_body, %entry
  %i1 = load i32, i32* %i, align 4
  %tmp = icmp sge i32 %i1, 0
  br i1 %tmp, label %while_body, label %while_end

while_body:                                       ; preds = %while
  %printf_str = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0))
  %i2 = load i32, i32* %i, align 4
  %tmp3 = sub i32 %i2, 1
  store i32 %tmp3, i32* %i, align 4
  br label %while

while_end:                                        ; preds = %while
  ret i32 0
}
