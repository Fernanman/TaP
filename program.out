; ModuleID = 'TaP'
source_filename = "TaP"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @yap() {
entry:
  ret i32 2
}

define i32 @main() {
entry:
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  store i32 3, i32* %i1, align 4
  br label %for_cond

for_cond:                                         ; preds = %for_body, %entry
  %i2 = load i32, i32* %i1, align 4
  %for_cond3 = icmp slt i32 %i2, 10
  br i1 %for_cond3, label %for_body, label %for_end

for_body:                                         ; preds = %for_cond
  %i4 = load i32, i32* %i1, align 4
  store i32 %i4, i32* %i, align 4
  %i5 = load i32, i32* %i, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %i5)
  store i32 5, i32* %i, align 4
  %i6 = load i32, i32* %i1, align 4
  %for_inc = add i32 %i6, 1
  store i32 %for_inc, i32* %i1, align 4
  br label %for_cond

for_end:                                          ; preds = %for_cond
  ret i32 0
}
