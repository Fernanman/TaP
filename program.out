; ModuleID = 'TaP'
source_filename = "TaP"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@str = private unnamed_addr constant [5 x i8] c"helo\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @strlen(i8*)

define i32 @main() {
entry:
  %mystring = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str, i32 0, i32 0), i8** %mystring, align 8
  %mystring1 = load i8*, i8** %mystring, align 8
  %strlen = call i32 @strlen(i8* %mystring1)
  %"printf_int " = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %strlen)
  ret i32 0
}
