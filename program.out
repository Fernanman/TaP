; ModuleID = 'TaP'
source_filename = "TaP"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@str = private unnamed_addr constant [6 x i8] c"hello\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %ba = alloca i32*, align 8
  %mystring = alloca i8*, align 8
  %char = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 1), align 1
  %char_str = alloca i8, i32 2, align 1
  %c0 = getelementptr inbounds i8, i8* %char_str, i32 0
  store i8 %char, i8* %c0, align 1
  %c1 = getelementptr inbounds i8, i8* %char_str, i32 1
  store i8 0, i8* %c1, align 1
  store i8* %char_str, i8** %mystring, align 8
  %mystring1 = load i8*, i8** %mystring, align 8
  %printf_str = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i8* %mystring1)
  ret i32 0
}
